name: Azure CI/CD for React App with Entra External ID

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_ENV_NAME: a-riff-in-react
  AZURE_LOCATION: westus
  AZURE_RESOURCE_GROUP: riffinreact-rg
  SHARED_SQL_SERVER_NAME: sequitur-sql-server
  SHARED_SQL_SERVER_RG: db-rg

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      
      - name: Deploy Bicep template
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
          template: ./infra/main.bicep
          parameters: >
            environmentName=${{ env.AZURE_ENV_NAME }}
            location=${{ env.AZURE_LOCATION }}
            externalTenantId=${{ secrets.ENTRA_TENANT_ID }}
            externalClientId=${{ secrets.ENTRA_CLIENT_ID }}
            sqlAdminPassword=${{ secrets.SQL_ADMIN_PASSWORD }}
            sharedSqlServerName=${{ env.SHARED_SQL_SERVER_NAME }}
            sharedSqlServerResourceGroupName=${{ env.SHARED_SQL_SERVER_RG }}
      
      - name: Azure Logout
        run: az logout
        if: always()

  build-and-deploy:
    needs: deploy-infrastructure
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Install Frontend dependencies
        run: npm ci

      - name: Build Frontend React app
        run: npm run build
        env: 
          # Use actual values during build - Vite embeds these at build time
          VITE_ENTRA_CLIENT_ID: ${{ secrets.ENTRA_CLIENT_ID }}
          VITE_ENTRA_TENANT_ID: ${{ secrets.ENTRA_TENANT_ID }}
          VITE_REDIRECT_URI: "https://a-riff-in-react.azurewebsites.net"
          VITE_POST_LOGOUT_URI: "https://a-riff-in-react.azurewebsites.net"
          VITE_API_BASE_URL: "https://api-a-riff-in-react.azurewebsites.net"
          VITE_API_SCOPE: "api://a-riff-in-react/access_as_user"

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      
      - name: Deploy Frontend React app to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_ENV_NAME }}
          package: ./dist
      
      # Backend deployment temporarily disabled - using manual deployment method
      # - name: Build Backend API App
      #   run: |
      #     pushd ./api
      #     npm ci
      #     npm run build
      #     popd
          
      # - name: Deploy Backend API App Service
      #   run: |
      #     cd ./api
      #     # Create deployment structure with compiled JS files
      #     mkdir -p deployment
      #     cp package*.json deployment/
      #     # Copy compiled server from dist
      #     cp -r dist/* deployment/
      #     # Copy node_modules for runtime
      #     cp -r node_modules deployment/
      #     # Create api-app.zip from the deployment folder
      #     cd deployment
      #     zip -r ../api-app.zip . 
      #     cd ..
      #     az webapp deployment source config-zip \
      #       --src api-app.zip \
      #       --name api-${{ env.AZURE_ENV_NAME }} \
      #       --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
      #       --verbose

      - name: Verify Entra External ID Configuration
        run: |
          echo "Verifying Entra External ID configuration in Azure Web App..."
          az webapp config appsettings list --name ${{ env.AZURE_ENV_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --query "[?contains(name, 'VITE_ENTRA_')].{Name:name, Value:value}" --output table
      
      - name: Logout from Azure
        run: az logout
        if: always()
